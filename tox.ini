# content of: tox.ini
[tox]
envlist = py38,py39,py310,py311,py312
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Linting, checking syntax and running tests
require_locked_deps = true
install_dev_deps = true
commands =
    poetry run black pysma_tool/behaviours/behaviour.py
    poetry run flake8 pysma_tool/behaviours/behaviour.py
    poetry run pylint pysma_tool/behaviours/behaviour.py

    poetry run black pysma_tool/behaviours/behaviour_status.py
    poetry run flake8 pysma_tool/behaviours/behaviour_status.py
    poetry run pylint pysma_tool/behaviours/behaviour_status.py

    poetry run black pysma_tool/behaviours/cyclic_behaviour.py
    poetry run flake8 pysma_tool/behaviours/cyclic_behaviour.py
    poetry run pylint pysma_tool/behaviours/cyclic_behaviour.py

    poetry run black pysma_tool/behaviours/one_shot_behaviour.py
    poetry run flake8 pysma_tool/behaviours/one_shot_behaviour.py
    poetry run pylint pysma_tool/behaviours/one_shot_behaviour.py

    poetry run black pysma_tool/behaviours/waker_behaviour.py
    poetry run flake8 pysma_tool/behaviours/waker_behaviour.py
    poetry run pylint pysma_tool/behaviours/waker_behaviour.py

    poetry run black pysma_tool/behaviours/parallel_behaviour_waiting_method.py
    poetry run flake8 pysma_tool/behaviours/parallel_behaviour_waiting_method.py
    poetry run pylint pysma_tool/behaviours/parallel_behaviour_waiting_method.py
    
    poetry run coverage run -m pytest -v
    poetry run coverage report